<Window
    x:Class="waerp_toolpilot.modules.RentItem.BookItemNewWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:waerp_toolpilot.modules.RentItem"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="RentSelectedItemView"
    Width="1100"
    Height="800"
    AllowsTransparency="True"
    Background="Transparent"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <Style x:Key="LeftGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#444444" />
            <Setter Property="Margin" Value="15,0,0,0" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#444444" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style x:Key="QuantityCell" TargetType="{x:Type TextBlock}">
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,10,0,0" />
        </Style>
        <Style x:Key="GridCellPad" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="15,10,0,0" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="5.5*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border
            Grid.RowSpan="4"
            Grid.ColumnSpan="2"
            MouseLeftButtonDown="Border_MouseLeftButtonDown"
            Style="{StaticResource BorderDialog}">
            <Rectangle Margin="0" Style="{StaticResource RectangleDialog}" />
        </Border>

        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Margin="40,40,40,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Vertical">
                <StackPanel Margin="0,0,0,0" Orientation="Vertical">

                    <TextBlock
                        x:Name="ItemIdent"
                        FontSize="20"
                        FontWeight="Light"
                        Text="Test"
                        TextWrapping="Wrap" />
                    <TextBlock
                        FontSize="14"
                        FontWeight="Medium"
                        Text="{DynamicResource itemIdent}" />
                </StackPanel>
                <StackPanel Margin="0,10,0,0" Orientation="Vertical">
                    <TextBlock
                        x:Name="ItemDescription"
                        FontSize="20"
                        FontWeight="Light"
                        Text="itemasdkjaskdk"
                        TextWrapping="Wrap" />
                    <TextBlock
                        FontSize="14"
                        FontWeight="Medium"
                        Text="{DynamicResource itemDescription1Hint}" />
                </StackPanel>
                <StackPanel Margin="0,10,0,0" Orientation="Vertical">
                    <TextBlock
                        x:Name="ItemDescription2"
                        FontSize="20"
                        FontWeight="Light"
                        Text="itemasdkjaskdk"
                        TextWrapping="Wrap" />
                    <TextBlock
                        FontSize="14"
                        FontWeight="Medium"
                        Text="{DynamicResource itemDescription2Hint}" />
                </StackPanel>

                <!--<Button
                    Grid.Column="1"
                    Width="200"
                    Margin="0,40,0,0"
                    HorizontalAlignment="Left"
                    Click="ReportErrorLocationBtn_Click"
                    Style="{StaticResource ReportButton}">
                    <TextBlock Text="{DynamicResource reportWrongLocationText}" />
                </Button>-->
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Vertical">
                <StackPanel Orientation="Vertical">
                    <TextBlock
                        x:Name="ItemDiameter"
                        FontSize="20"
                        FontWeight="Light"
                        Text="2,00" />
                    <TextBlock
                        FontSize="14"
                        FontWeight="Medium"
                        Text="⌀ Durchmesser in mm" />
                </StackPanel>
                <StackPanel Margin="0,10,0,0" Orientation="Vertical">
                    <TextBlock
                        x:Name="ItemTotalQuantity"
                        FontSize="20"
                        FontWeight="Light"
                        Text="itemasdkjaskdk" />
                    <TextBlock
                        FontSize="14"
                        FontWeight="Medium"
                        Text="{DynamicResource itemQuantHint2}" />
                </StackPanel>
            </StackPanel>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border
                    Grid.Row="0"
                    Padding="8"
                    Background="#9E9E9E"
                    BorderBrush="#EEEEEE"
                    BorderThickness="2"
                    CornerRadius="5"
                    MouseLeftButtonDown="Border_MouseLeftButtonDown">
                    <Image x:Name="ItemImage" />

                </Border>
                <TextBlock
                    x:Name="Barcode"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontFamily="{StaticResource BarcodeFontX}"
                    FontSize="50"
                    Text="*12510010*" />
            </Grid>

        </Grid>
        <StackPanel
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Margin="0,0,30,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Orientation="Horizontal">
            <CheckBox
                x:Name="UsedItems"
                Click="UsedItems_Click"
                Content="{DynamicResource itemIsUsedCheckbox}"
                IsChecked="False"
                Style="{StaticResource MaterialDesignFilterChipCheckBox}" />
            <!--<CheckBox
                x:Name="ItemConstructed"
                Click="ItemConstructed_Click"
                Content="Zusammengebaut"
                IsChecked="True"
                Style="{StaticResource MaterialDesignFilterChipCheckBox}" />-->
        </StackPanel>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>
                <TextBlock
                    Margin="40,0,0,0"
                    VerticalAlignment="Bottom"
                    FontSize="16"
                    FontWeight="Medium"
                    Text="{DynamicResource existingLocationTitle}" />
                <DataGrid
                    x:Name="locationData"
                    Grid.Row="1"
                    Margin="40,10,20,10"
                    ItemsSource="{Binding Path=locationData}"
                    SelectionChanged="locationData_SelectionChanged">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="MinHeight" Value="40" />
                            <Setter Property="MaxHeight" Value="40" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#00F4E6" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>

                            </Style.Triggers>

                        </Style>

                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="2*"
                            Binding="{Binding Path=container_name_long}"
                            ElementStyle="{StaticResource GridCellPad}"
                            Header="{DynamicResource containerTableHeader}"
                            HeaderStyle="{StaticResource LeftGridHeaderStyle}"
                            IsReadOnly="True" />
                        <DataGridTextColumn
                            Width="2*"
                            Binding="{Binding Path=location_name}"
                            ElementStyle="{StaticResource GridCellPad}"
                            Header="{DynamicResource locationIdentHeader}"
                            HeaderStyle="{StaticResource LeftGridHeaderStyle}"
                            IsReadOnly="True" />
                        <!--<DataGridTemplateColumn
                            Width="*"
                            Header="Montiert"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="Check" />
                                                <Setter Property="Foreground" Value="#8BC34A" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding item_constructed}" Value="0">
                                                        <Setter Property="Kind" Value="Close" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridTemplateColumn
                            Width="*"
                            Header="{DynamicResource isUsedHeader}"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="Check" />
                                                <Setter Property="Foreground" Value="#8BC34A" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding item_used}" Value="0">
                                                        <Setter Property="Kind" Value="Close" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                            Width="*"
                            Header="{DynamicResource dynamicLocTableHeader}"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="Check" />
                                                <Setter Property="Foreground" Value="#8BC34A" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding is_dynamic}" Value="0">
                                                        <Setter Property="Kind" Value="Close" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Path=item_quantity}"
                            ElementStyle="{StaticResource QuantityCell}"
                            Header="{DynamicResource singleQuantityHeader}"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid Grid.Row="2" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="249*" />
                    <ColumnDefinition Width="26*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>
                <Grid
                    Grid.RowSpan="2"
                    Grid.ColumnSpan="2"
                    Margin="20,0,0,333"
                    VerticalAlignment="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Bottom"
                        FontSize="16"
                        FontWeight="Medium"
                        Text="{DynamicResource emptyLocationTitle}" />
                    <TextBox
                        x:Name="searchBox"
                        Grid.Column="1"
                        Margin="0,0,40,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        materialDesign:HintAssist.Hint="{DynamicResource searchBarText}"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        AcceptsReturn="False"
                        Cursor="Hand"
                        IsEnabled="True"
                        Style="{StaticResource MaterialDesignFilledTextBox}"
                        TextChanged="searchBox_TextChanged"
                        TextWrapping="Wrap" />
                </Grid>

                <DataGrid
                    x:Name="locationEmptyData"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Margin="20,10,40,10"
                    ItemsSource="{Binding Path=locationEmptyData}"
                    SelectionChanged="locationEmptyData_SelectionChanged">
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="FontSize" Value="16" />
                            <Setter Property="MinHeight" Value="40" />
                            <Setter Property="MaxHeight" Value="40" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#00F4E6" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>

                            </Style.Triggers>

                        </Style>

                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Path=location_name}"
                            ElementStyle="{StaticResource GridCellPad}"
                            Header="{DynamicResource locationIdentHeader}"
                            HeaderStyle="{StaticResource LeftGridHeaderStyle}"
                            IsReadOnly="True" />
                        <!--<DataGridTemplateColumn
                        Width="*"
                        Header="Montiert"
                        HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image
                                    Width="20"
                                    Height="20"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Stretch="UniformToFill"
                                    StretchDirection="Both">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="/assets/images/app/CheckIconPNG.png" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding item_constructed}" Value="0">
                                                    <Setter Property="Source" Value="/assets/images/app/NotIconPNG.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Benutzt"
                        HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image
                                    Width="20"
                                    Height="20"
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    Stretch="UniformToFill"
                                    StretchDirection="Both">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="/assets/images/app/CheckIconPNG.png" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding item_used}" Value="0">
                                                    <Setter Property="Source" Value="/assets/images/app/NotIconPNG.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
                        <DataGridTemplateColumn
                            Width="*"
                            Header="{DynamicResource dynamicLocTableHeader}"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <materialDesign:PackIcon
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Setter Property="Kind" Value="Check" />
                                                <Setter Property="Foreground" Value="#8BC34A" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding is_dynamic}" Value="0">
                                                        <Setter Property="Kind" Value="Close" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Path=location_quantity}"
                            ElementStyle="{StaticResource QuantityCell}"
                            Header="{DynamicResource singleQuantityHeader}"
                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                            IsReadOnly="True" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>



        <Grid Grid.Row="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Width="200"
                Click="CloseCurrentDialog"
                Content="{DynamicResource cancleButton}"
                Style="{StaticResource CancleButton}" />
            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    Click="MinusQuantity_Click"
                    Style="{StaticResource RoundButtons}"
                    ToolTip="MaterialDesignFloatingActionMiniLightButton">
                    <materialDesign:PackIcon Kind="Minus" />
                </Button>
                <TextBox
                    x:Name="QuantityInput"
                    Width="200"
                    MaxWidth="200"
                    Margin="20,0,20,0"
                    VerticalAlignment="Center"
                    materialDesign:HintAssist.Hint="{DynamicResource singleQuantityHeader}"
                    AcceptsReturn="True"
                    IsEnabled="{Binding Path=IsChecked, ElementName=MaterialDesignFilledTextBoxEnabledComboBox}"
                    PreviewTextInput="NumberValidationTextBox"
                    Style="{StaticResource MaterialDesignFilledTextBox}"
                    Text="0"
                    TextWrapping="Wrap" />
                <StackPanel Orientation="Horizontal">
                    <Button
                        Margin="0,0,20,0"
                        Click="PlusQuantity_Click"
                        Style="{StaticResource RoundButtons}"
                        ToolTip="MaterialDesignFloatingActionMiniLightButton">
                        <materialDesign:PackIcon Kind="Plus" />
                    </Button>
                    <Button
                        Click="QuantityNumInput_Click"
                        Content="{materialDesign:PackIcon Keyboard}"
                        Style="{StaticResource RoundButtons}"
                        ToolTip="Icon" />
                </StackPanel>
            </StackPanel>

            <Button
                x:Name="ReturnBtn"
                Grid.Column="4"
                Width="200"
                Click="ReturnItem"
                Content="{DynamicResource bookInItemButton}"
                Style="{StaticResource NormalButton}" />
        </Grid>
    </Grid>
</Window>
